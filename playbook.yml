---
- name: Deploy servers
  hosts: localhost
  gather_facts: no

  vars_files:
    - environments/{{ env }}/group_vars/rax.yml

  tasks:
    - name: Ensure database servers
      rax:
        wait: yes

        name: "{{ database.name }}"
        group: "{{ database.group|default('database') }}"
        auto_increment: yes
        count: "{{ database.count|default(1) }}"
        exact_count: yes

        image: "{{ database.image }}"
        flavor: "{{ database.flavor }}"
        region: "{{ database.region|default('IAD') }}"

        key_name: "{{ database.key }}"
      register: database_servers

    - name: Register new database hosts
      add_host:
        hostname: "{{ item.name }}"
        ansible_host: "{{ item.rax_accessipv4 }}"
        group_name: "{{ database.group|default('database') }}"
      with_items: database_servers.success
      when: database_servers.action == 'create'

    - name: Ensure web servers
      rax:
        wait: yes

        name: "{{ web.name }}"
        group: "{{ web.group|default('web') }}"
        auto_increment: yes
        count: "{{ web.count|default(1) }}"
        exact_count: yes

        image: "{{ web.image }}"
        flavor: "{{ web.flavor }}"
        region: "{{ web.region|default('IAD') }}"

        key_name: "{{ web.key }}"
      register: web_servers

    - name: Register new web hosts
      add_host:
        hostname: "{{ item.name }}"
        ansible_host: "{{ item.rax_accessipv4 }}"
        group_name: "{{ web.group|default('web') }}"
      with_items: web_servers.success
      when: web_servers.action == 'create'

- name: Wait for hosts
  hosts: "{{ env }}"
  gather_facts: yes

  tasks:
    - name: Wait for hosts
      wait_for:
        delay: 10
        host: "{{ ansible_ssh_host|default(inventory_hostname) }}"
        port: 22
        search_regex: OpenSSH

- name: Trust hosts
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Fetch host keys
      command: ssh-keyscan {{ hostvars[item].ansible_ssh_host }}
      register: host_ssh_keys
      with_items: groups[env]
      changed_when: false

    - name: Add host keys
      lineinfile:
        dest: ~/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ item.stdout }}"
      with_items: host_ssh_keys.results

- name: Bootstrap hosts
  hosts: "{{ web.group|default('web') }}"
  gather_facts: no

  vars_files:
    - environments/{{ env }}/group_vars/rax.yml

  roles:
    - sigma.coreos-bootstrap

- name: Configure access
  hosts: "{{ env }}"
  gather_facts: yes

  tasks:
    - name: Ensure SSH keys
      authorized_key:
        user: "{{ ansible_ssh_user }}"
        key: https://github.com/{{ item }}.keys
      with_items:
        - dirn
        - jonafato
