---
- name: Deploy servers
  hosts: localhost
  gather_facts: no

  vars_files:
    - environments/{{ env }}/group_vars/rax.yml

  tasks:
    - name: Ensure servers
      rax:
        wait: yes
        wait_timeout: 600

        name: "{{ env }}-"
        group: "{{ env }}"
        auto_increment: yes
        count: "{{ server.count|default(1) }}"
        exact_count: yes

        image: "{{ server.image }}"
        flavor: "{{ server.flavor }}"
        region: "{{ server.region|default('IAD') }}"

        key_name: "{{ server.key }}"
      register: servers

    - name: Register new hosts
      add_host:
        hostname: "{{ item.name }}"
        ansible_host: "{{ item.rax_accessipv4 }}"
        groups: "{{ env }}"
      with_items: servers.success
      when: servers|changed

- name: Trust hosts
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Fetch host keys
      command: ssh-keyscan {{ hostvars[item].rax_accessipv4 }}
      register: host_ssh_keys
      with_items: groups[env]
      changed_when: false

    - name: Add host keys
      lineinfile:
        dest: ~/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ item.1 }}"
      with_subelements:
        - host_ssh_keys.results
        - stdout_lines

- name: Bootstrap hosts
  hosts: "{{ env }}"
  gather_facts: no

  vars_files:
    - environments/{{ env }}/group_vars/rax.yml

  roles:
    - sigma.coreos-bootstrap

  tasks:
    - name: Install pip
      command: ~/bin/python -m ensurepip
      args:
        creates: ~/pypy/site-packages/pip

    - name: Install docker-py
      pip:
        name: docker-py
        state: latest

- name: Configure access
  hosts: "{{ env }}"
  gather_facts: yes

  tasks:
    - name: Ensure SSH keys
      authorized_key:
        user: "{{ ansible_ssh_user }}"
        key: https://github.com/{{ item }}.keys
      with_items:
        - dirn
        - jonafato

- name: Start services
  hosts: "{{ env }}"
  gather_facts: no
  become: yes

  tasks:
    - name: Start etcd
      service:
        name: etcd.service
        state: started

- name: Nginx
  hosts: "{{ env }}"
  gather_facts: no

  tasks:
    - name: Download nginx
      command: docker pull nginx

    - name: Start nginx
      docker:
        docker_api_version: "1.20"
        image: nginx
        name: nginx
        ports: "80:80"
        state: running
